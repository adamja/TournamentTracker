# Use postgres/example user/password credentials

# RUN COMMAND
# docker-compose -f docker-compose.yaml up
# docker-compose -f docker-compose.yaml up -d
# docker-compose -f docker-compose.yaml start
# docker-compose -f docker-compose.yaml stop
# docker-compose -f docker-compose.yaml logs -f

# Docker-compose reference: https://docs.docker.com/compose/compose-file/

version: '3.2'

services:

  tournamenttracker:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '5000:5000'
    volumes:
      - type: volume
        source: tt-db
        target: '/app/data/db'
      - type: volume
        source: tt-logs
        target: '/app/data/logs'
    environment:
      VIRTUAL_HOST: 'subdomain.yourdomain.tld'
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: 'subdomain.yourdomain.tld'
      LETSENCRYPT_EMAIL: 'example@email.com'
#    env_file: .env
    restart: unless-stopped
#    depends_on:
#      - nginx-proxy
#      - letencrypt-nginx-proxy


# Docs: https://github.com/nginx-proxy/nginx-proxy
#  nginx-proxy:
#    image: jwilder/nginx-proxy
#    ports:
#      - '80:80'
#      - '443:443'
#    volumes:
#      - type: volume
#        source: nginx-certs
#        target: '/etc/nginx/certs'
#      - type: volume
#        source: nginx-vhost
#        target: '/etc/nginx/vhost.d'
#      - type: volume
#        source: nginx-html
#        target: '/usr/share/nginx/html'
#      - type: bind
#        source: '/var/run/docker.sock'
#        target: '/tmp/docker.sock:ro'
#    restart: unless-stopped
#
#
## Docs: https://github.com/nginx-proxy/docker-letsencrypt-nginx-proxy-companion
#  letencrypt-nginx-proxy:
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    volumes:
#      - conf:/etc/nginx/conf.d
#      - vhost:/etc/nginx/vhost.d
#      - html:/usr/share/nginx/html
#      - certs:/etc/nginx/certs
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    restart: unless-stopped
#    depends_on:
#      - nginx-proxy


volumes:
  tt-db:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./docker/tournamenttracker/app/data/db
  tt-logs:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./docker/tournamenttracker/app/data/logs
  htpasswd:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./docker/tournamenttracker/letsencrypt/nginx/htpasswd/
    conf:
      driver: local
      driver_opts:
        o: bind
        type: none
        device: ./docker/tournamenttracker/letsencrypt/nginx/conf.d/
    vhost:
      driver: local
      driver_opts:
        o: bind
        type: none
        device: ./docker/tournamenttracker/letsencrypt/nginx/vhost.d/
    html:
      driver: local
      driver_opts:
        o: bind
        type: none
        device: ./docker/tournamenttracker/letsencrypt/nginx/html/
    certs:
      driver: local
      driver_opts:
        o: bind
        type: none
        device: ./docker/tournamenttracker/letsencrypt/nginx/certs/


networks:
  default:
    external:
      name: tournamenttracker
